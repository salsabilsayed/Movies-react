{"version":3,"sources":["Auth/auth-context.js","component/Title.jsx","component/Error.jsx","component/Input.jsx","component/Movie.jsx","component/MoviesList.jsx","pages/Home.jsx","pages/SignUp.jsx","pages/Login.jsx","component/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","savedToken","localStorage","getItem","useState","setToken","contextValue","Provider","value","children","Title","className","Error","Input","setMovieName","movieName","error","Form","Group","Control","type","placeholder","onChange","e","target","Movie","title","poster","year","src","alt","MoviesList","data","Container","Row","map","movie","index","Col","xs","sm","md","lg","Poster","Year","Home","setData","setError","useEffect","axios","get","then","res","result","Search","catch","console","log","SignUp","navigate","useNavigate","authContext","useContext","ageError","setAgeError","emailError","setEmailError","validationSchema","Yup","shape","name","min","required","email","password","formik","useFormik","initialValues","age","onSubmit","values","post","setItem","resetForm","response","errors","code","message","validateOnMount","handleSubmit","controlId","getFieldProps","touched","disabled","isValid","isSubmitting","icon","faSpinner","Login","loginError","setLoginError","Header","authCtx","Navbar","Nav","Link","to","onClick","config","headers","Authorization","delete","removeItem","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d3da4a.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n    token:'',\r\n    isLoggedIn: false,\r\n    login:(token)=> {},\r\n    logout: ()=>{}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\r\n    const savedToken = localStorage.getItem('token');\r\n    const [token, setToken] = useState(savedToken);\r\n\r\n    const isUserLoggedIn = !!token;\r\n\r\n    const loginHandler = (token) => {\r\n        setToken(token);\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        setToken(null);\r\n    }\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: isUserLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    return <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext;","import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <h1 className='title text-center pt-5 pb-4'>Search your favourite Movies</h1>\r\n    )\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\n\r\nimport './Error.css';\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <p className='error py-2'>{props.children}</p>\r\n    )\r\n}\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport Error from './Error';\r\n\r\nimport './Input.css'\r\n\r\nconst Input = ({setMovieName,movieName,error}) => {\r\n\r\n  const searchHandler = (e)=>{\r\n    setMovieName(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"inputContainer mx-auto my-4\">\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Control type=\"text\" \r\n          placeholder=\"Enter movie...\" \r\n          value={movieName}\r\n          onChange={searchHandler}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      {error && <Error>{error}</Error>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport './Movie.css';\r\n\r\nconst Movie = ({title,poster,year}) => {\r\n    return (\r\n        <div className='position-relative mb-4 overflow-hidden main-movie-info'>\r\n            <img src={poster} className='w-100' alt={title}/>\r\n            <div className='movie-info'>\r\n                <h4>{title}</h4>\r\n                <p className='mb-0'>{year}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport { Container,Row,Col } from 'react-bootstrap';\r\n\r\nconst MoviesList = ({data}) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"py-4\">\r\n        <Row>\r\n              {data.map((movie,index) =>{\r\n                  return <Col key={index} xs={12} sm={6} md={4} lg={3}>\r\n                      <Movie \r\n                          poster={movie.Poster}\r\n                          title={movie.Title}\r\n                          year={movie.Year}\r\n                      />\r\n                  </Col>\r\n              })}\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Title from \"../component/Title\";\r\nimport Input from \"../component/Input\";\r\nimport MoviesList from \"../component/MoviesList\";\r\n\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [movieName, setMovieName] = useState(\"batman\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://www.omdbapi.com/?apikey=43dbf631&s=${movieName}`)\r\n      .then((res) => {\r\n        if (res.data.Error) {\r\n          setError(\"Movie not found!\");\r\n          return;\r\n        }\r\n        const result = res.data.Search;\r\n        setData(result);\r\n        setError(null);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        setError(\"Something went wrong!\");\r\n      });\r\n  }, [movieName]);\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <Title />\r\n      <Input setMovieName={setMovieName} movieName={movieName} error={error} />\r\n      {!error && <MoviesList data={data} />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState, useContext} from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form} from \"react-bootstrap\";\r\nimport { useFormik } from \"formik\";\r\nimport AuthContext from \"../Auth/auth-context\";\r\nimport Error from \"../component/Error\";\r\nimport * as Yup from 'yup';\r\nimport axios from \"axios\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './auth.css';\r\n\r\nconst SignUp = () => {\r\n\r\n  let navigate = useNavigate();\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const [ ageError, setAgeError ] = useState(false);\r\n  const [ emailError, setEmailError ] = useState(false);\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        age: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      }\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n        axios.post('https://task-app-nodee.herokuapp.com/users',values)\r\n        .then(res=>{\r\n          console.log(res.data);\r\n          const token = res.data.token;\r\n          localStorage.setItem('token',token);\r\n          authContext.login(token);\r\n          setAgeError(false);\r\n          setEmailError(false);\r\n          formik.resetForm();\r\n          navigate('/');\r\n        })\r\n        .catch(error =>{\r\n\r\n          if (error.response.data.errors?.age.name === 'ValidatorError') {\r\n            setAgeError(true);\r\n          } \r\n          if (error.response.data.code === 11000) {\r\n            setEmailError(true);\r\n          } \r\n          \r\n          console.log('Error', error.message);\r\n          \r\n        })\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n        .min(3, 'Must be 3 characters or more')\r\n        .required('Required'),\r\n\r\n      email: Yup.string().email('Invalid email').required('Required'),\r\n      \r\n      password: Yup.string()\r\n      .min(6, 'Must be 6 characters or more')\r\n      .required('Required'),\r\n    });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validationSchema,\r\n    validateOnMount:true\r\n  });\r\n\r\n  return (\r\n    <section className=\"auth\">\r\n      <Form className=\"containerForm py-5\" onSubmit={formik.handleSubmit}>\r\n        <h3 className=\"title text-center mb-4\">Sign up</h3>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            {...formik.getFieldProps('name')}\r\n            className={`${formik.touched.name && formik.errors.name && \"is-invalid\"} \r\n            ${formik.touched.name && !formik.errors.name && \"is-valid\"}\r\n            `}\r\n          />\r\n        </Form.Group>\r\n        {/* name error message */}\r\n        {formik.touched.name \r\n        && formik.errors.name \r\n        && <Error>{formik.errors.name}</Error>}\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicAge\">\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter your age\"\r\n            name=\"age\"\r\n            {...formik.getFieldProps('age')}\r\n            className={`${formik.touched.age && ageError && \"is-invalid\"} \r\n            ${formik.touched.age && !ageError&& \"is-valid\"}\r\n            `}\r\n          />\r\n        </Form.Group>\r\n        {/* age backend error */}\r\n        {ageError && <Error>Age must be a positive number</Error>}\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            {...formik.getFieldProps('email')}\r\n            className={`${formik.touched.email && formik.errors.email && \"is-invalid\"} \r\n            ${formik.touched.email && !formik.errors.email && \"is-valid\"}\r\n        `}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* email error messages */}\r\n        {formik.touched.email\r\n         && formik.errors.email \r\n         && <Error>{formik.errors.email}</Error>}\r\n\r\n         {/* backend email error */}\r\n         {emailError && <Error>Email already exist</Error>}\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          \r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            {...formik.getFieldProps('password')}\r\n            className={`${formik.touched.password && formik.errors.password && \"is-invalid\"} \r\n            ${formik.touched.password && !formik.errors.password && \"is-valid\"}`}\r\n          />\r\n        </Form.Group>\r\n        {/* password error messages */}\r\n        {formik.touched.password && \r\n        formik.errors.password && \r\n        <Error>{formik.errors.password}</Error>}\r\n\r\n        <button \r\n        type=\"submit\" \r\n        className=\"button\"\r\n        disabled={!formik.isValid }>\r\n          <span className=\"mx-2\">Register</span>\r\n          {formik.isSubmitting && <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\"/>}\r\n        </button>\r\n        \r\n      </Form>\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React,{useState, useContext} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../Auth/auth-context\";\r\nimport Error from '../component/Error';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './auth.css';\r\n\r\nconst Login = () => {\r\n\r\n    const [ loginError, setLoginError ] = useState(false);\r\n    const authContext = useContext(AuthContext);\r\n    let navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n        password: \"\",\r\n      }\r\n\r\n      const onSubmit = (values) => {\r\n        axios.post('https://task-app-nodee.herokuapp.com/users/login',values)\r\n        .then(res=>{\r\n          console.log(res.data);\r\n          const token = res.data.token;\r\n          localStorage.setItem('token',token);\r\n          authContext.login(token);\r\n          setLoginError(false);\r\n          formik.resetForm();\r\n          navigate('/')\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                setLoginError(true);\r\n            }\r\n        })\r\n    }\r\n\r\n      const validationSchema = Yup.object().shape({\r\n  \r\n        email: Yup.string().email('Invalid email').required('Required'),\r\n        \r\n        password: Yup.string()\r\n        .min(6, 'Must be 6 characters or more')\r\n        .required('Required'),\r\n      });\r\n  \r\n\r\n      const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema,\r\n        validateOnMount:true\r\n      });\r\n\r\n    return (\r\n      <section className='auth'>\r\n        <Form className=\"containerForm py-5\" onSubmit={formik.handleSubmit}>\r\n\r\n          <h3 className='title text-center mb-4'>Login</h3>\r\n\r\n            {/* error message */}\r\n\r\n        {loginError && <Error>invalid email or password</Error>}\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          \r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            {...formik.getFieldProps('email')}\r\n            className={`${((formik.touched.email && formik.errors.email) || loginError) && \"is-invalid\"} \r\n            ${formik.touched.email && !formik.errors.email && \"is-valid\"}\r\n        `}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* email error messages */}\r\n        {formik.touched.email\r\n         && formik.errors.email \r\n         && <Error>{formik.errors.email}</Error>}\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          \r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            {...formik.getFieldProps('password')}\r\n            className={`${((formik.touched.password && formik.errors.password) || loginError) && \"is-invalid\"} \r\n            ${formik.touched.password && !formik.errors.password && \"is-valid\"}`}\r\n          />\r\n        </Form.Group>\r\n        {/* password error messages */}\r\n        {formik.touched.password && \r\n        formik.errors.password && \r\n        <Error>{formik.errors.password}</Error>}\r\n\r\n        <button \r\n        type=\"submit\" \r\n        className='button'\r\n        disabled={!formik.isValid}>\r\n          <span className=\"mx-2\">Login</span>\r\n          {formik.isSubmitting && <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\"/>}\r\n        </button>\r\n      </Form>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { Link,useNavigate } from \"react-router-dom\";\r\nimport AuthContext from \"../Auth/auth-context\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  let navigate = useNavigate();\r\n\r\n  const logOutHandler = () =>{\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${authCtx.token}` }\r\n  };\r\n    axios.delete('https://task-app-nodee.herokuapp.com/logout',config)\r\n    .then(res =>{\r\n      localStorage.removeItem('token')\r\n      authCtx.logout();\r\n    }).catch(e =>{\r\n      console.log(e);\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <Navbar className=\"nav\">\r\n      <Container>\r\n        <h2 className=\"title\">Search Movies</h2>\r\n        <Nav className=\"ml-auto\">\r\n          {!isLoggedIn && <Nav.Link>\r\n            <Link to=\"signup\" className=\"link\">Register</Link>\r\n          </Nav.Link>}\r\n\r\n          {!isLoggedIn && <Nav.Link>\r\n            <Link to=\"login\" className=\"link\">Login</Link>\r\n          </Nav.Link>}\r\n\r\n          {isLoggedIn && <Nav.Link>\r\n            <Link to=\"login\" onClick={logOutHandler} className=\"link\">Logout</Link>\r\n          </Nav.Link>}\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\nimport { BrowserRouter, Routes, Route,Navigate } from \"react-router-dom\";\nimport AuthContext from \"./Auth/auth-context\";\n\nimport Home from './pages/Home';\nimport SignUp from './pages/SignUp';\nimport Login from './pages/Login';\nimport Header from \"./component/Header\";\n\nimport './App.css';\n\nfunction App() {\n\n  const authCtx = useContext(AuthContext);\n  \n  return (\n    <BrowserRouter>\n    <Header />\n      <Routes>\n        {authCtx.isLoggedIn && <Route path=\"/\" element={<Home />} />}\n        <Route path=\"signup\" element={<SignUp />} />\n        \n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"*\" element={<Navigate to=\"login\" />} /> \n        \n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthContextProvider } from './Auth/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}